<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software engineering on Fred Wieser</title>
    <link>http://localhost:1313/wieserpedia/software-engineering/</link>
    <description>Recent content in software engineering on Fred Wieser</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 25 May 2023 00:00:00 -0600</lastBuildDate><atom:link href="http://localhost:1313/wieserpedia/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>glossary</title>
      <link>http://localhost:1313/wieserpedia/software-engineering/glossary/</link>
      <pubDate>Sun, 12 Nov 2023 00:00:00 -0600</pubDate>
      
      <guid>http://localhost:1313/wieserpedia/software-engineering/glossary/</guid>
      
      <description>Abstract Terms defined here are not defined elsewhere in these notes.
Agile An iterative approach to project management and software development that helps teams deliver value to their customers quickly. It involves breaking the project down into phases and emphasizes continuous collaboration and improvement.
Agile was encoded in the Agile Manifesto which defines four values and 12 principles for agile software development.
4 Values Individuals and interactions over processes and tools Working software over comprehensive documentation Customer collaboration over contract negotiation Responding to change over following a plan 12 Principles Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.</description>
      
    </item>
    
    <item>
      <title>algorithms</title>
      <link>http://localhost:1313/wieserpedia/software-engineering/algorithms/</link>
      <pubDate>Thu, 17 Feb 2022 19:00:29 -0700</pubDate>
      
      <guid>http://localhost:1313/wieserpedia/software-engineering/algorithms/</guid>
      
      <description>Algorithms Algorithm – A series of instructions that perform a task.
Big-O Notation Used to describe time and space complexities of algorithms:
O(1) — O of 1 time aka constant time O(n) — Linear time O(log(n)) — Logarithmic time O(n^2) — Exponential timeLeast efficient O(n!) — Factorial time Hashing Credit: ByteByteGo blog
Simple Hashing A mechanism to distribute data evenly across servers.
Implementing For each object, hash its key with a hashing function (like MD5):</description>
      
    </item>
    
  </channel>
</rss>
