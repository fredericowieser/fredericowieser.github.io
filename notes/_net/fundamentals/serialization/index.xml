<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>serialization on Fred Wieser</title>
    <link>http://localhost:1313/notes/_net/fundamentals/serialization/</link>
    <description>Recent content in serialization on Fred Wieser</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jul 2023 00:00:00 -0600</lastBuildDate><atom:link href="http://localhost:1313/notes/_net/fundamentals/serialization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>overview</title>
      <link>http://localhost:1313/notes/_net/fundamentals/serialization/overview/</link>
      <pubDate>Thu, 27 Jul 2023 00:00:00 -0600</pubDate>
      
      <guid>http://localhost:1313/notes/_net/fundamentals/serialization/overview/</guid>
      
      <description>Abstract .NET supports serialization and deserialization for JSON; XML and SOAP; and Binary data.
Serialization — Converting types/objects to JSON. Deserialization — Converting JSON to types/objects. Documentation: https://learn.microsoft.com/en-us/dotnet/standard/serialization/ </description>
      
    </item>
    
    <item>
      <title>xml</title>
      <link>http://localhost:1313/notes/_net/fundamentals/serialization/xml/</link>
      <pubDate>Thu, 23 Dec 2021 16:29:42 -0700</pubDate>
      
      <guid>http://localhost:1313/notes/_net/fundamentals/serialization/xml/</guid>
      
      <description>Overview Namespace: System.Xml.Serialization Documentation: https://docs.microsoft.com/en-us/dotnet/api/system.xml.serialization?view=net-6.0 Serializing When serializing a type with XmlSerializer, only public fields and properties are included, and the type must have a parameterless constructor.
List&amp;lt;Person&amp;gt; people = … // Create an object graph of Person objects in a List of Persons. XmlSerializer xs = new(people.GetType()); // Create object that formats a List of Persons as XML. using (FileStream stream = File.Create(path)) { xs.Serialize(stream, people); // Serialize the object graph to the stream.</description>
      
    </item>
    
  </channel>
</rss>
